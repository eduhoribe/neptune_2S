# Conditional Homing
[gcode_macro CG28]
description: Home if not already homed
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}


# Beeper
[gcode_macro BEEP]
description: M300 with loops
gcode:
    # Parameters
    {% set i = params.I|default(1)|int %}          # Iterations (number of times to beep).
    {% set dur = params.DUR|default(100)|int %}    # Duration/wait of each beep in ms. Default 100ms.
    {% set freq = params.FREQ|default(2000)|int %} # Frequency in Hz. Default 2kHz.

    {% for iteration in range(i|int) %}
        SET_PIN PIN=beeper VALUE=0.8 CYCLE_TIME={ 1.0/freq if freq > 0 else 1 }
        G4 P{dur}
        SET_PIN PIN=beeper VALUE=0
    {% endfor %}

[gcode_macro M300]
description: Add a tone to the tone queue
gcode:
    BEEP I=1 DUR={params.P} FREQ={params.S}


# Filament Change
[gcode_macro M600]
description: Filament Change
gcode:
    PAUSE

# Start/Pause/Resume/Cancel/End macros
[gcode_macro PRINT_START]
gcode:
    # Parameters
    {% set bed = params.BED|int %}
    {% set hotend = params.HOTEND|int %}

    _RESET_SPEEDS # Reset speeds and accels to config values

    ENABLE_FILAMENT_SENSOR_NO_DELAY E=0 # Disable the filament sensor to avoid false positives

    G90         # Use absolute coordinates
    M83         # Set extruder to relative mode
    M104 S120   # Set temporary nozzle temp to prevent oozing during homing and auto bed leveling
    M140 S{bed} # Set bed to target temp
    G4 S10      # Allow partial nozzle warmup

    G28 # Home all axis
    BED_MESH_CALIBRATE # Generate bed mesh

    Smart_Park     # Park the tool head closer to the print area
    M104 S{hotend} # Set final nozzle temp
    M109 S{hotend} # Wait for nozzle temp to stabilize
    M190 S{bed}    # Wait for bed temp to stabilize

    G92 E0       # Reset Extruder
    G1 Z2.0 F600 # Move the Z Axis up a little to prevent scratching the bed
    LINE_PURGE   # Purge the filament
    G92 E0       # Reset Extruder

    G1 Z0.3 F600 # Move the Z Axis up a little to prevent scratching the bed

    ENABLE_FILAMENT_SENSOR_NO_DELAY E=1 # Enable the filament sensor

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount
    
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        ENABLE_FILAMENT_SENSOR_NO_DELAY E=0                                                  ; disable filament sensor

        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_minimum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; extruder purge amount
    
    {% if printer['pause_resume'].is_paused|int == 1 %}
        ENABLE_FILAMENT_SENSOR_NO_DELAY E=1                                          ; enable filament sensor
        
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}                      
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT

[gcode_macro PRINT_END]
gcode:
    ENABLE_FILAMENT_SENSOR_NO_DELAY E=0                         # Disable the filament sensor
    M400                                                        # wait for buffer to clear
    G92 E0                                                      # zero the extruder
    G10                                                         # retract filament
    G91                                                         # relative positioning
    M107                                                        # turn off fan
    {% if (printer.gcode_move.position.z + 10) < printer.toolhead.axis_maximum.z %}
      G1 Z5 F3000 # move nozzle up 5mm
    {% endif %}
    G90                                                         # absolute positioning
    G0 Y{printer.toolhead.axis_maximum.y-5} F1800               # park nozzle at rear
    M84 X Y E                                                   # disable motors
    BED_MESH_CLEAR                                              # clear mesh
    M104 S0                                                     # turn off hotend
    M140 S0                                                     # turn off heatbed
    BEEP I=2

#Parking
[gcode_macro PARK_FRONT]
description: Parks the toolhead at the front-center of the build volume
gcode:
    CG28                              ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/2} F6000        
    RESTORE_GCODE_STATE NAME=PARKFRONT

[gcode_macro PARK_FRONT_LOW]
description: Parks the toolhead at the front-center of the build volume, but 15mm above the bed
gcode:
    CG28                             ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                              ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z15 F6000                                     
    RESTORE_GCODE_STATE NAME=PARKFRONT

[gcode_macro PARK_CENTER]
description: Parks the toolhead at the center of the build volume
gcode:
    CG28                              ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKCENTER
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F6000    
    RESTORE_GCODE_STATE NAME=PARKCENTER

[gcode_macro PARK_CENTER_LOW]
description: Parks the toolhead at the center of the build volume, but 15mm above the bed
gcode:
    CG28                              ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKCENTERLOW
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z15 F6000    
    RESTORE_GCODE_STATE NAME=PARKCENTERLOW

## Park 15mm above center of bed
[gcode_macro PARK_BED]
description: Parks the toolhead 15mm above center of the bed
gcode:
    CG28                               ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKBED
    G90                                ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z15 F6000                                     
    RESTORE_GCODE_STATE NAME=PARKBED

## Park at the top-right. Useful for filament change.
[gcode_macro PARK_RIGHT]
description: Parks the toolhead at the top-right corner
gcode:
    CG28                               ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKRIGHT
    G90                                ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z-50} F6000                                     
    RESTORE_GCODE_STATE NAME=PARKRIGHT


# Misc
[gcode_macro _RESET_SPEEDS]
gcode:
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity}
    SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity}

[gcode_macro DUMP_PARAMETERS]
description: Dumps all Klipper parameters to the terminal
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { action_respond_info("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) }
      {% else %}
         { action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
      {% endfor %}
   {% endfor %}
